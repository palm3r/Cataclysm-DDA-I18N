#include "mapdata.h"
#include "i18n.h"

extern ter_t terlist[num_terrain_types];
ter_t terlist[num_terrain_types] = {  // MUST match enum ter_id above!
{"nothing",      ' ', c_white,   2, tr_null,
  mfb(transparent)|mfb(diggable)},
{N_("empty space"),      ' ', c_black,   2, tr_ledge,
  mfb(transparent)},
{N_("dirt"),       '.', c_brown,   2, tr_null,
  mfb(transparent)|mfb(diggable)|mfb(tentable)},
{N_("sand"),       '.', c_yellow,   2, tr_null,
  mfb(transparent)|mfb(diggable)|mfb(tentable)},
{N_("mound of dirt"),    '#', c_brown,   3, tr_null,
  mfb(transparent)|mfb(diggable)},
{N_("shallow pit"),      '0', c_yellow,  8, tr_null,
  mfb(transparent)|mfb(diggable)},
{N_("pit"),              '0', c_brown,  10, tr_pit,
  mfb(transparent)|mfb(diggable)},
{N_("corpse filled pit"),'#', c_green,  5,  tr_null,
        mfb(transparent)|mfb(diggable)},
{N_("covered pit"),       '#', c_ltred,   2, tr_null,
  mfb(transparent)},
{N_("spiked pit"),       '0', c_ltred,  10, tr_spike_pit,
  mfb(transparent)|mfb(diggable)},
{N_("covered spiked pit"),'#',c_ltred,   2, tr_null,
  mfb(transparent)},
{N_("rock floor"),       '.', c_ltgray,  2, tr_null,
  mfb(transparent)},
{N_("pile of rubble"),   '^', c_ltgray,  4, tr_null,
  mfb(transparent)|mfb(rough)|mfb(diggable)},
{N_("pile of ash"),   '#', c_ltgray,  2, tr_null,
  mfb(transparent)|mfb(diggable)},
{N_("twisted metal"),    '#', c_cyan,    5, tr_null,
        mfb(transparent)|mfb(rough)|mfb(sharp)|mfb(place_item)},
{N_("metal wreckage"),   '#', c_cyan,    5, tr_null,
        mfb(transparent)|mfb(rough)|mfb(sharp)|mfb(place_item)},
{N_("grass"),      '.', c_green,   2, tr_null,
  mfb(transparent)|mfb(diggable)|mfb(tentable)},
{N_("metal floor"),      '.', c_ltcyan,  2, tr_null,
  mfb(transparent)},
{N_("pavement"),       '.', c_dkgray,  2, tr_null,
  mfb(transparent)},
{N_("yellow pavement"),  '.', c_yellow,  2, tr_null,
  mfb(transparent)},
{N_("sidewalk"),         '.', c_ltgray,  2, tr_null,
  mfb(transparent)},
{N_("floor"),      '.', c_cyan,    2, tr_null,
  mfb(transparent)|mfb(l_flammable)|mfb(supports_roof)|mfb(collapses)},
{N_("dirt floor"),       '.', c_brown,    2, tr_null,  //Dirt Floor, must have roofs!
  mfb(transparent)|mfb(diggable)|mfb(supports_roof)|mfb(collapses)},
{N_("hay"),              '#', i_brown, 5, tr_null,
  mfb(transparent)|mfb(container)|mfb(flammable2)|mfb(collapses)},
{N_("metal grate"),      '#', c_dkgray,  2, tr_null,
  mfb(transparent)},
{N_("slime"),            '~', c_green,   6, tr_null,
        mfb(transparent)|mfb(container)|mfb(flammable2)|mfb(place_item)},
{N_("walkway"),          '#', c_yellow,  2, tr_null,
  mfb(transparent)},
{N_("canvas wall"),      '#', c_blue,   0, tr_null,
        mfb(l_flammable)|mfb(bashable)|mfb(noitem)|mfb(tentable)},
{N_("canvas flap"),      '+', c_blue,   0, tr_null,
        mfb(l_flammable)|mfb(bashable)|mfb(noitem)|mfb(tentable)},
{N_("open canvas flap"), '.', c_blue,   2, tr_null,
        mfb(transparent)},
{N_("groundsheet"),      ';', c_green,   2, tr_null,
        mfb(transparent)|mfb(tentable)},
{N_("groundsheet"),      ';', c_green,   2, tr_null,
        mfb(transparent)},
{N_("animalskin wall"),      '#', c_brown,   0, tr_null,
        mfb(l_flammable)|mfb(bashable)|mfb(noitem)|mfb(tentable)},
{N_("animalskin flap"),      '+', c_white,   0, tr_null,
        mfb(l_flammable)|mfb(bashable)|mfb(noitem)|mfb(tentable)},
{N_("open animalskin flap"), '.', c_white,   2, tr_null,
        mfb(transparent)},
{N_("animalskin floor"),      ';', c_brown,   2, tr_null,
        mfb(transparent)|mfb(tentable)},
{N_("floor"),      '.', c_white,    2, tr_null,
  mfb(transparent)|mfb(l_flammable)|mfb(supports_roof)|mfb(collapses)}, // Skylight
{N_("floor"),      '.', c_white,    2, tr_null,
  mfb(transparent)|mfb(l_flammable)|mfb(supports_roof)|mfb(collapses)}, // Emergency Light
{N_("floor"),      '.', c_white,    2, tr_null,
  mfb(transparent)|mfb(l_flammable)|mfb(supports_roof)|mfb(collapses)}, // Regular Light
{N_("half-built wall"), '#', c_brown,   4, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)},
{N_("log wall"),        '#', c_brown,   0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("chipped log wall"),'#', c_brown,   0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("broken log wall"), '&', c_brown,   0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)|
  mfb(supports_roof)},
{N_("palisade wall"),        '#', c_brown,   0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)|mfb(transparent)},
{N_("palisade gate"),        '+', c_ltred,    0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)|mfb(door)|mfb(transparent)},
{N_("half-built wall"),  '#', c_ltred,   4, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)},
{N_("wooden wall"),      '#', c_ltred,   0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("chipped wood wall"),'#', c_ltred,   0, tr_null,
        mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("broken wood wall"), '&', c_ltred,   0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)|
    mfb(supports_roof)},
{N_("wall"),             '|', c_ltgray,  0, tr_null,
        mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("wall"),             '-', c_ltgray,  0, tr_null,
        mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("concrete wall"),    '|', c_dkgray,  0, tr_null,
        mfb(noitem)|mfb(supports_roof)},
{N_("concrete wall"),    '-', c_dkgray,  0, tr_null,
        mfb(noitem)|mfb(supports_roof)},
{N_("metal wall"),       '|', c_cyan,    0, tr_null,
        mfb(noitem)|mfb(noitem)|mfb(supports_roof)},
{N_("metal wall"),       '-', c_cyan,    0, tr_null,
        mfb(noitem)|mfb(noitem)|mfb(supports_roof)},
{N_("glass wall"),       '|', c_ltcyan,  0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(supports_roof)},
{N_("glass wall"),       '-', c_ltcyan,  0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(supports_roof)},
{N_("glass wall"),       '|', c_ltcyan,  0, tr_null, // Alarmed
  mfb(transparent)|mfb(bashable)|mfb(alarmed)|mfb(noitem)|
 mfb(supports_roof)},
{N_("glass wall"),       '-', c_ltcyan,  0, tr_null, // Alarmed
  mfb(transparent)|mfb(bashable)|mfb(alarmed)|mfb(noitem)|
 mfb(supports_roof)},
{N_("reinforced glass"), '|', c_ltcyan,  0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(supports_roof)},
{N_("reinforced glass"), '-', c_ltcyan,  0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(supports_roof)},
{N_("metal bars"),       '"', c_ltgray,  0, tr_null,
  mfb(transparent)|mfb(noitem)},
{N_("closed wood door"), '+', c_brown,   0, tr_null,
        mfb(bashable)|mfb(flammable2)|mfb(door)|mfb(noitem)|mfb(supports_roof)},
{N_("damaged wood door"),'&', c_brown,   0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)|
        mfb(supports_roof)},
{N_("open wood door"),  '\'', c_brown,   2, tr_null,
        mfb(flammable2)|mfb(transparent)|mfb(supports_roof)},
{N_("closed wood door"), '+', c_brown,   0, tr_null,  // Actually locked
        mfb(bashable)|mfb(flammable2)|mfb(noitem)|mfb(supports_roof)},
{N_("closed wood door"), '+', c_brown,   0, tr_null, // Locked and alarmed
  mfb(bashable)|mfb(flammable2)|mfb(alarmed)|mfb(noitem)|mfb(supports_roof)},
{N_("empty door frame"), '.', c_brown,   2, tr_null,
        mfb(transparent)|mfb(supports_roof)},
{N_("locked wire gate"), '+', c_cyan,   0, tr_null,
        mfb(transparent)|mfb(supports_roof)},
{N_("closed wooden gate"), '+', c_brown,   3, tr_null,
        mfb(transparent)|mfb(supports_roof) |mfb(bashable)|mfb(flammable2)},
{N_("open wooden gate"),   '.', c_brown,   2, tr_null,
        mfb(transparent)|mfb(supports_roof) |mfb(bashable)|mfb(flammable2)},
{N_("closed wire gate"), '+', c_cyan,   0, tr_null,
        mfb(transparent)|mfb(supports_roof)},
{N_("open wire gate"),   '.', c_cyan,   2, tr_null,
        mfb(transparent)|mfb(supports_roof)},
{N_("boarded up door"),  '#', c_brown,   0, tr_null,
  mfb(bashable)|mfb(flammable2)|mfb(noitem)|mfb(supports_roof)},
{N_("closed metal door"),'+', c_cyan,    0, tr_null,
  mfb(noitem)|mfb(supports_roof)},
{N_("open metal door"), '\'', c_cyan,    2, tr_null,
  mfb(transparent)|mfb(supports_roof)},
{N_("closed metal door"),'+', c_cyan,    0, tr_null, // Actually locked
  mfb(noitem)|mfb(supports_roof)},
{N_("closed glass door"),'+', c_ltcyan,  0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(door)|mfb(noitem)|mfb(supports_roof)},
{N_("open glass door"), '\'', c_ltcyan,  2, tr_null,
  mfb(transparent)|mfb(supports_roof)},
{N_("bulletin board"),   '6', c_blue,    0, tr_null,
  mfb(flammable)|mfb(noitem)},
{N_("makeshift portcullis"), '&', c_cyan, 0, tr_null,
  mfb(noitem)},
{N_("steel compactor"),      '&', c_green, 0, tr_null,
        mfb(transparent)},
{N_("window"),       '"', c_ltcyan,  0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable)|mfb(noitem)|
        mfb(supports_roof)|mfb(deconstruct)}, // Plain Ol' window
{N_("taped window"),  '"', c_dkgray,    0, tr_null,
  mfb(bashable)|mfb(flammable)|mfb(noitem)| mfb(supports_roof)| mfb(reduce_scent)}, // Regular window
{N_("window"),       '"', c_ltcyan,  0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable)|mfb(noitem)|
        mfb(supports_roof)|mfb(deconstruct)}, //has curtains
{N_("taped window"),  '"', c_dkgray,    0, tr_null,
  mfb(bashable)|mfb(flammable)|mfb(noitem)| mfb(supports_roof)| mfb(reduce_scent)}, // Curtain window
{N_("open window"),      '\'', c_ltcyan, 4, tr_null,
  mfb(transparent)|mfb(flammable)|mfb(noitem)| mfb(supports_roof)},
{N_("closed curtains"),  '"', c_dkgray,    0, tr_null,
  mfb(bashable)|mfb(flammable)|mfb(noitem)| mfb(supports_roof)},
{N_("window"),       '"', c_ltcyan,  0, tr_null, // Actually alarmed
  mfb(transparent)|mfb(bashable)|mfb(flammable)|mfb(alarmed)|mfb(noitem)|
        mfb(supports_roof)},
{N_("taped window"),  '"', c_dkgray,    0, tr_null,
  mfb(bashable)|mfb(flammable)|mfb(noitem)| mfb(supports_roof)|mfb(alarmed)| mfb(reduce_scent)}, //Alarmed, duh.
{N_("empty window"),     '0', c_yellow,  8, tr_null,
  mfb(transparent)|mfb(flammable)|mfb(supports_roof)},
{N_("window frame"),     '0', c_ltcyan,  8, tr_null,
  mfb(transparent)|mfb(sharp)|mfb(flammable)|mfb(noitem)|
        mfb(supports_roof)},
{N_("boarded up window"),'#', c_brown,   0, tr_null,
  mfb(bashable)|mfb(flammable)|mfb(noitem)|mfb(supports_roof)},
{N_("solid rock"),       '#', c_white,   0, tr_null,
  mfb(noitem)|mfb(supports_roof)},
{N_("odd fault"),        '#', c_magenta, 0, tr_null,
  mfb(noitem)|mfb(supports_roof)},
{N_("paper wall"),       '#', c_white,   0, tr_null,
  mfb(bashable)|mfb(flammable2)|mfb(noitem)},
{N_("tree"),       '7', c_green,   0, tr_null,
  mfb(flammable2)|mfb(noitem)|mfb(supports_roof)},
{N_("young tree"),       '1', c_green,   4, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(noitem)},
{N_("apple tree"), '7', c_ltgreen,   0, tr_null,
  mfb(flammable2)|mfb(noitem)|mfb(supports_roof)},
{N_("underbrush"),       '#', c_ltgreen, 6, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(diggable)|mfb(container)|
        mfb(flammable2)|mfb(thin_obstacle)|mfb(place_item)},
{N_("shrub"),            '#', c_green,   8, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(container)|mfb(flammable2)|
        mfb(thin_obstacle)|mfb(place_item)},
{N_("blueberry bush"),   '#', c_ltgreen,   8, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(container)|mfb(flammable2)|mfb(thin_obstacle)},
{N_("tree trunk"),              '1', c_brown,   4, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(diggable)},
{N_("root wall"),        '#', c_brown,   0, tr_null,
  mfb(noitem)|mfb(supports_roof)},
{N_("wax wall"),         '#', c_yellow,  0, tr_null,
        mfb(flammable2)|mfb(noitem)|mfb(supports_roof)|mfb(place_item)},
{N_("wax floor"),        '.', c_yellow,  2, tr_null,
  mfb(transparent)|mfb(l_flammable)},
{N_("picket fence"),     '|', c_brown,   3, tr_null,
  mfb(transparent)|mfb(diggable)|mfb(flammable2)|mfb(noitem)|mfb(thin_obstacle)},
{N_("picket fence"),     '-', c_brown,   3, tr_null,
  mfb(transparent)|mfb(diggable)|mfb(flammable2)|mfb(noitem)|mfb(thin_obstacle)},
{N_("chain link fence"), '|', c_cyan,    0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(thin_obstacle)},
{N_("chain link fence"), '-', c_cyan,    0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(noitem)|mfb(thin_obstacle)},
{N_("metal post"),       '#', c_cyan,    2, tr_null,
        mfb(transparent)|mfb(thin_obstacle)},
{N_("fence post"),       '#', c_brown,   2, tr_null,
        mfb(transparent)|mfb(thin_obstacle)},
{N_("wire fence"),       '$', c_blue,    4, tr_null,
        mfb(transparent)|mfb(thin_obstacle)},
{N_("barbed wire fence"),'$', c_blue,    4, tr_null,
        mfb(transparent)|mfb(sharp)|mfb(thin_obstacle)},
{N_("rope fence"),       '$', c_brown,   3, tr_null,
        mfb(transparent)|mfb(thin_obstacle)},
{N_("railing"),          '|', c_yellow,  3, tr_null,
  mfb(transparent)|mfb(noitem)|mfb(thin_obstacle)},
{N_("railing"),          '-', c_yellow,  3, tr_null,
  mfb(transparent)|mfb(noitem)|mfb(thin_obstacle)},
{N_("marloss bush"),     '1', c_dkgray,  0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(flammable2)},
{N_("fungal bed"),       '#', c_dkgray,  3, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(diggable)},
{N_("fungal tree"),      '7', c_dkgray,  0, tr_null,
  mfb(flammable2)|mfb(noitem)},
{N_("shallow water"),    '~', c_ltblue,  5, tr_null,
  mfb(transparent)|mfb(liquid)|mfb(swimmable)},
{N_("deep water"),       '~', c_blue,    0, tr_null,
  mfb(transparent)|mfb(liquid)|mfb(swimmable)},
{N_("sewage"),           '~', c_ltgreen, 6, tr_null,
  mfb(transparent)|mfb(swimmable)},
{N_("lava"),             '~', c_red,     4, tr_lava,
  mfb(transparent)|mfb(liquid)},
{N_("bed"),              '#', c_magenta, 5, tr_null,
        mfb(transparent)|mfb(container)|mfb(flammable2)|mfb(collapses)|
        mfb(deconstruct)|mfb(place_item)},
{N_("toilet"),           '&', c_white,   4, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(l_flammable)|mfb(collapses)},
{N_("makeshift bed"),    '#', c_magenta, 5, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)},
{N_("sink"),             '&', c_white,   4, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(l_flammable)|mfb(collapses)|mfb(container)|mfb(place_item)},
{N_("oven"),             '#', c_dkgray,   4, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(l_flammable)|mfb(collapses)|mfb(container)|mfb(place_item)},

{N_("wood stove"),             '#', i_red,   4, tr_null,
        mfb(transparent)|mfb(container)|mfb(place_item)},


{N_("bathtub"),          '~', c_white,   4, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(l_flammable)|mfb(collapses)|mfb(container)|mfb(place_item)},

{N_("chair"),            '#', c_brown,   2, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)},

{N_("arm chair"),            'H', c_green,   3, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)},

{N_("sofa"),            'H', i_red,   3, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)},
{N_("cupboard"),         '#', c_blue,    3, tr_null,
        mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)|
        mfb(container)|mfb(place_item)},
{N_("trash can"),        '&', c_ltcyan,  3, tr_null,
        mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(container)|mfb(place_item)},
{N_("desk"),             '#', c_ltred,   3, tr_null,
        mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)|
        mfb(container)|mfb(place_item)},
{N_("sandbox"), '#', c_yellow, 3, tr_null,
  mfb(transparent)|mfb(deconstruct)},
{N_("slide"),            '#', c_ltcyan,  4, tr_null,
  mfb(transparent)|mfb(deconstruct)},
{N_("monkey bars"),      '#', c_cyan,    4, tr_null,
  mfb(transparent)|mfb(deconstruct)},
{N_("backboard"),        '7', c_red,     0, tr_null,
  mfb(transparent)|mfb(deconstruct)},
{N_("bench"),            '#', c_brown,   3, tr_null,
  mfb(transparent)|mfb(flammable2)|mfb(collapses)|mfb(deconstruct)},
{N_("table"),            '#', c_red,     4, tr_null,
  mfb(transparent)|mfb(flammable)|mfb(collapses)|mfb(deconstruct)},
{N_("pool table"),       '#', c_green,   4, tr_null,
  mfb(transparent)|mfb(flammable)|mfb(collapses)|mfb(deconstruct)},
{N_("gasoline pump"),    '&', c_red,     0, tr_null,
  mfb(transparent)|mfb(explodes)|mfb(noitem)},
{N_("smashed gas pump"), '&', c_ltred,   0, tr_null,
  mfb(transparent)|mfb(noitem)},
{N_("out-of-order gasoline pump"),    '&', c_red,     0, tr_null,
  mfb(transparent)|mfb(noitem)},
{N_("missile"),          '#', c_ltblue,  0, tr_null,
  mfb(explodes)|mfb(noitem)},
{N_("blown-out missile"),'#', c_ltgray,  0, tr_null,
  mfb(noitem)},
{N_("counter"),      '#', c_blue,    4, tr_null,
  mfb(transparent)|mfb(flammable)|mfb(collapses)|mfb(deconstruct)},
{N_("radio tower"),      '&', c_ltgray,  0, tr_null,
  mfb(noitem)},
{N_("radio controls"),   '6', c_green,   0, tr_null,
  mfb(transparent)|mfb(bashable)|mfb(noitem)},
{N_("broken console"),   '6', c_ltgray,  0, tr_null,
  mfb(transparent)|mfb(noitem)|mfb(collapses)},
{N_("computer console"), '6', c_blue,    0, tr_null,
  mfb(transparent)|mfb(console)|mfb(noitem)|mfb(collapses)},
{N_("mechanical winch"), '6', c_cyan_red, 0, tr_null,
        mfb(transparent)|mfb(noitem)|mfb(collapses)},
{N_("rope and pulley"), '|', c_brown, 0, tr_null,
        mfb(transparent)|mfb(noitem)|mfb(collapses)},
{N_("rope and pulley"), '|', c_brown, 0, tr_null,
        mfb(transparent)|mfb(noitem)|mfb(collapses)},
{N_("sewage pipe"),      '1', c_ltgray,  0, tr_null,
  mfb(transparent)},
{N_("sewage pump"),      '&', c_ltgray,  0, tr_null,
  mfb(noitem)},
{N_("centrifuge"),       '{', c_magenta, 0, tr_null,
  mfb(transparent)},
{N_("column"),           '1', c_ltgray,  0, tr_null,
  mfb(flammable)},
{N_("refrigerator"),     '{', c_ltcyan,  0, tr_null,
  mfb(container)|mfb(collapses)|mfb(bashable)|mfb(place_item)},
{N_("glass door fridge"),'{', c_ltcyan,  0, tr_null,
        mfb(collapses)|mfb(bashable)|mfb(place_item)},
{N_("dresser"),          '{', c_brown,   0, tr_null,
        mfb(transparent)|mfb(container)|mfb(flammable)|mfb(collapses)|
        mfb(bashable)|mfb(deconstruct)|mfb(place_item)},
{N_("locker"),           '{', c_ltgray,  0, tr_null,
        mfb(container)|mfb(collapses)|mfb(bashable)|mfb(place_item)},
{N_("display rack"),     '{', c_ltgray,  0, tr_null,
        mfb(transparent)|mfb(l_flammable)|mfb(collapses)|mfb(bashable)|
        mfb(deconstruct)|mfb(place_item)},
{N_("book case"),        '{', c_brown,   0, tr_null,
        mfb(flammable)|mfb(collapses)|mfb(bashable)|mfb(deconstruct)|mfb(place_item)},
{N_("dumpster"),       '{', c_green,   0, tr_null,
        mfb(container)|mfb(bashable)|mfb(place_item)},
{N_("cloning vat"),      '0', c_ltcyan,  0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(sealed)|mfb(place_item)},
{N_("crate"),            'X', i_brown,   0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(container)|mfb(sealed)|
        mfb(flammable)|mfb(deconstruct)|mfb(place_item)},
{N_("open crate"),       'O', i_brown,   0, tr_null,
        mfb(transparent)|mfb(bashable)|mfb(container)|mfb(flammable)|mfb(place_item)},
{N_("stairs down"),      '>', c_yellow,  2, tr_null,
        mfb(transparent)|mfb(goes_down)|mfb(place_item)},
{N_("stairs up"),        '<', c_yellow,  2, tr_null,
        mfb(transparent)|mfb(goes_up)|mfb(place_item)},
{N_("manhole"),          '>', c_dkgray,  2, tr_null,
        mfb(transparent)|mfb(goes_down)|mfb(place_item)},
{N_("ladder"),           '<', c_dkgray,  2, tr_null,
        mfb(transparent)|mfb(goes_up)|mfb(place_item)},
{N_("ladder"),           '>', c_dkgray,  2, tr_null,
        mfb(transparent)|mfb(goes_down)|mfb(place_item)},
{N_("downward slope"),   '>', c_brown,   2, tr_null,
        mfb(transparent)|mfb(goes_down)|mfb(place_item)},
{N_("upward slope"),     '<', c_brown,   2, tr_null,
        mfb(transparent)|mfb(goes_up)|mfb(place_item)},
{N_("rope leading up"),  '<', c_white,   2, tr_null,
  mfb(transparent)|mfb(goes_up)},
{N_("manhole cover"),    '0', c_dkgray,  2, tr_null,
  mfb(transparent)},
{N_("card reader"),      '6', c_pink,    0, tr_null,  // Science
  mfb(noitem)},
{N_("card reader"),      '6', c_pink,    0, tr_null,  // Military
  mfb(noitem)},
{N_("broken card reader"),'6',c_ltgray,  0, tr_null,
  mfb(noitem)},
{N_("slot machine"),     '6', c_green,   0, tr_null,
  mfb(bashable)|mfb(noitem)},
{N_("elevator controls"),'6', c_ltblue,  0, tr_null,
  mfb(noitem)},
{N_("powerless controls"),'6',c_ltgray,  0, tr_null,
  mfb(noitem)},
{N_("elevator"),         '.', c_magenta, 2, tr_null,
  0},
{N_("dark pedestal"),    '&', c_dkgray,  0, tr_null,
  mfb(transparent)},
{N_("light pedestal"),   '&', c_white,   0, tr_null,
  mfb(transparent)},
{N_("red stone"),        '#', c_red,     0, tr_null,
  0},
{N_("green stone"),      '#', c_green,   0, tr_null,
  0},
{N_("blue stone"),       '#', c_blue,    0, tr_null,
  0},
{N_("red floor"),        '.', c_red,     2, tr_null,
  mfb(transparent)},
{N_("green floor"),      '.', c_green,   2, tr_null,
  mfb(transparent)},
{N_("blue floor"),       '.', c_blue,    2, tr_null,
  mfb(transparent)},
{N_("yellow switch"),    '6', c_yellow,  0, tr_null,
  mfb(transparent)},
{N_("cyan switch"),      '6', c_cyan,    0, tr_null,
  mfb(transparent)},
{N_("purple switch"),    '6', c_magenta, 0, tr_null,
  mfb(transparent)},
{N_("checkered switch"), '6', c_white,   0, tr_null,
  mfb(transparent)},
{N_("mutated poppy flower"), 'f', c_red, 3, tr_null,
        mfb(transparent)}
};

extern field_t fieldlist[NUM_FIELDLIST];
field_t fieldlist[NUM_FIELDLIST] = {
{{"", "", ""},          '%',
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false},   0},

{{N_("blood splatter"), N_("blood stain"), N_("puddle of blood")},  '%',
 {c_red, c_red, c_red},   {true, true, true}, {false, false, false},2500},

{{N_("bile splatter"), N_("bile stain"), N_("puddle of bile")}, '%',
 {c_pink, c_pink, c_pink},  {true, true, true}, {false, false, false},2500},

{{N_("cobwebs"),N_("webs"), N_("thick webs")},      '}',
 {c_white, c_white, c_white}, {true, true, false},{false, false, false},   0},

{{N_("slime trail"), N_("slime stain"), N_("puddle of slime")}, '%',
 {c_ltgreen, c_ltgreen, c_green},{true, true, true},{false, false, false},2500},

{{N_("acid splatter"), N_("acid streak"), N_("pool of acid")},  '5',
 {c_ltgreen, c_green, c_green}, {true, true, true}, {true, true, true},     10},

{{N_("sap splatter"), N_("glob of sap"), N_("pool of sap")},  '5',
 {c_yellow, c_brown, c_brown},  {true, true, true}, {true, true, true},     20},

{{N_("small fire"), N_("fire"), N_("raging fire")},     '4',
 {c_yellow, c_ltred, c_red},  {true, true, true}, {true, true, true},    800},

{{N_("thin smoke"), N_("smoke"), N_("thick smoke")},    '8',
 {c_white, c_ltgray, c_dkgray}, {true, false, false},{false, true, true},  300},

{{N_("hazy cloud"),N_("toxic gas"),N_("thick toxic gas")},    '8',
 {c_white, c_ltgreen, c_green}, {true, false, false},{false, true, true},  900},

{{N_("hazy cloud"),N_("tear gas"),N_("thick tear gas")},    '8',
 {c_white, c_yellow, c_brown},  {true, false, false},{true, true, true},   600},

{{N_("hazy cloud"),N_("radioactive gas"), N_("thick radioactive gas")}, '8',
 {c_white, c_ltgreen, c_green}, {true, true, false}, {true, true, true},  1000},

{{N_("gas vent"), N_("gas vent"), N_("gas vent")}, '%',
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false}, 0},

{{"", "", ""}, '&', // fire vents
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false}, 0},

{{N_("fire"), N_("fire"), N_("fire")}, '5',
 {c_red, c_red, c_red}, {true, true, true}, {true, true, true}, 0},

{{N_("sparks"), N_("electric crackle"), N_("electric cloud")},  '9',
 {c_white, c_cyan, c_blue}, {true, true, true}, {true, true, true},      2},

{{N_("odd ripple"), N_("swirling air"), N_("tear in reality")}, '*',
 {c_ltgray, c_dkgray, c_magenta},{true, true, false},{false, false, false},  0},

{{"", "", ""}, '&', // push items
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false}, 0},

{{"", "", ""}, '&', // shock vents
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false}, 0},

{{"", "", ""}, '&', // acid vents
 {c_white, c_white, c_white}, {true, true, true}, {false, false, false}, 0}
};
