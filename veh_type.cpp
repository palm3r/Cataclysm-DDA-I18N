#include "veh_type.h"
#include "i18n.h"

// following symbols will be translated:
// y, u, n, b to NW, NE, SE, SW lines correspondingly
// h, j, c to horizontal, vertical, cross correspondingly
extern vpart_info vpart_list[num_vparts];
vpart_info vpart_list[num_vparts] =
{   // name        sym   color    sym_b   color_b  dmg  dur  par1 par2  item
    { "null part",  '?', c_red,     '?', c_red,     100, 100, 0, 0, itm_null, 0,
        0 },
    { N_("seat"),       '#', c_red,     '*', c_red,     60,  300, 0, 0, itm_seat, 1,
        mfb(vpf_over) | mfb(vpf_seat) | mfb(vpf_cargo) | mfb(vpf_no_reinforce) },
    { N_("bed"),        '#', c_magenta, '*', c_magenta, 60,  300, 0, 0, itm_seat, 1,
        mfb(vpf_over) | mfb(vpf_bed) | mfb(vpf_cargo) | mfb(vpf_no_reinforce) },
    { N_("frame"),      'h', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'j', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'c', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'y', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'u', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'n', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'b', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      '=', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      'H', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("frame"),      '^', c_ltgray,  '#', c_ltgray,  100, 400, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("handle"),     '^', c_ltcyan,  '#', c_ltcyan,  100, 300, 0, 0, itm_frame, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) },
    { N_("board"),      'h', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("board"),      'j', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("board"),      'y', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("board"),      'u', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("board"),      'n', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("board"),      'b', c_ltgray,  '#', c_ltgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_external) | mfb(vpf_mount_point) | mfb (vpf_mount_inner) | mfb(vpf_opaque) | mfb(vpf_obstacle) },
    { N_("roof"),       '#', c_ltgray,  '#', c_dkgray,  100, 1000, 0, 0, itm_steel_plate, 1,
        mfb(vpf_internal) | mfb(vpf_roof) },
    { N_("door"),       '+', c_cyan,    '&', c_cyan,    80,  200, 0, 0, itm_frame, 2,
        mfb(vpf_external) | mfb(vpf_obstacle) | mfb(vpf_openable) },
    { N_("opaque door"),'+', c_cyan,    '&', c_cyan,    80,  200, 0, 0, itm_frame, 2,
        mfb(vpf_external) | mfb(vpf_obstacle) | mfb(vpf_opaque) | mfb(vpf_openable) },
    { N_("internal door"), '+', c_cyan, '&', c_cyan,    75,  75, 0, 0, itm_frame, 2,
        mfb(vpf_external) | mfb(vpf_obstacle) | mfb(vpf_opaque) | mfb(vpf_openable) | mfb(vpf_roof) | mfb(vpf_no_reinforce) },
    { N_("windshield"), '"', c_ltcyan,  '0', c_ltgray,  70,  50, 0, 0, itm_glass_sheet, 1,
        mfb(vpf_over) | mfb(vpf_obstacle) | mfb(vpf_no_reinforce) },
    { N_("blade"),      '-', c_white,   'x', c_white,   250, 100, 0, 0, itm_blade, 2,
        mfb(vpf_external) | mfb(vpf_unmount_on_damage) | mfb(vpf_sharp) | mfb(vpf_no_reinforce) },
    { N_("blade"),      '|', c_white,   'x', c_white,   350, 100, 0, 0, itm_blade, 2,
        mfb(vpf_external) | mfb(vpf_unmount_on_damage) | mfb(vpf_sharp) | mfb(vpf_no_reinforce) },
    { N_("spike"),      '.', c_white,   'x', c_white,   300, 100, 0, 0, itm_spike, 2,
        mfb(vpf_external) | mfb(vpf_unmount_on_damage) | mfb(vpf_sharp) | mfb(vpf_no_reinforce) },

//                                                           wheel_width(inches)
    { N_("wheel"),      '0',    c_dkgray,  'x', c_ltgray,  50,  200, 9, 0, itm_wheel, 4,
        mfb(vpf_external) | mfb (vpf_mount_over) | mfb(vpf_wheel) | mfb(vpf_mount_point) | mfb(vpf_variable_size) },
    { N_("wide wheel"), 'O',     c_dkgray,   'x', c_ltgray,  50,  400, 14, 0, itm_wheel_wide, 5,
        mfb(vpf_external) | mfb (vpf_mount_over) | mfb(vpf_wheel) | mfb(vpf_mount_point) | mfb(vpf_variable_size) },
    { N_("bicycle wheel"),'|',  c_dkgray, 'x', c_ltgray,  50,  40, 2, 0, itm_wheel_bicycle, 1,
        mfb(vpf_external) | mfb (vpf_mount_over) | mfb(vpf_wheel) | mfb(vpf_mount_point) | mfb(vpf_variable_size) },
    { N_("motorbike wheel"),'o',c_dkgray, 'x', c_ltgray,  50,  90, 4, 0, itm_wheel_motorbike, 2,
        mfb(vpf_external) | mfb (vpf_mount_over) | mfb(vpf_wheel) | mfb(vpf_mount_point) | mfb(vpf_variable_size) },
    { N_("small wheel"),    'o',c_dkgray, 'x', c_ltgray,  50,  70, 6, 0, itm_wheel_small, 2,
        mfb(vpf_external) | mfb (vpf_mount_over) | mfb(vpf_wheel) | mfb(vpf_mount_point) | mfb(vpf_variable_size) },
//
    { N_("1-cylinder engine"),    '*', c_ltred,  '#', c_red,     80, 150, 40, AT_GAS, itm_1cyl_combustion, 2,
        mfb(vpf_internal) | mfb(vpf_engine) | mfb(vpf_variable_size) },
    { N_("V-twin engine"),       '*', c_ltred,  '#', c_red,     80, 200, 120, AT_GAS, itm_v2_combustion, 2,
        mfb(vpf_internal) | mfb(vpf_engine) | mfb(vpf_variable_size) },
    { N_("Inline-4 engine"),     '*', c_ltred,  '#', c_red,     80, 300, 300, AT_GAS, itm_i4_combustion, 3,
        mfb(vpf_internal) | mfb(vpf_engine) | mfb(vpf_variable_size) },
    { N_("V6 engine"),       '*', c_ltred,  '#', c_red,     80, 400, 800, AT_GAS, itm_v6_combustion, 4,
        mfb(vpf_internal) | mfb(vpf_engine) | mfb(vpf_variable_size) },
    { N_("V8 engine"),       '*', c_ltred,  '#', c_red,     80, 400, 800, AT_GAS, itm_v8_combustion, 4,
        mfb(vpf_internal) | mfb(vpf_engine) | mfb(vpf_variable_size) },
    { N_("electric motor"),             '*', c_yellow,  '#', c_red,    80, 200, 70, AT_BATT, itm_motor, 3,
        mfb(vpf_internal) | mfb(vpf_engine) },
    { N_("large electric motor"),       '*', c_yellow,  '#', c_red,    80, 400, 350, AT_BATT, itm_motor_large, 4,
        mfb(vpf_internal) | mfb(vpf_engine) },
    { N_("plasma engine"),              '*', c_ltblue,  '#', c_red,    80, 250, 400, AT_PLASMA, itm_plasma_engine, 6,
        mfb(vpf_internal) | mfb(vpf_engine) },
    { N_("Foot pedals"),                '*', c_ltgray,  '#', c_red,     50, 50, 70, AT_MUSCLE, itm_foot_crank, 1,
        mfb(vpf_internal) | mfb(vpf_engine) },
//                                                                         capacity type
    { N_("gasoline tank"),              'O', c_ltred,  '#', c_red,     80, 150, 3000, AT_GAS, itm_metal_tank, 1,
        mfb(vpf_internal) | mfb(vpf_fuel_tank) },
    { N_("storage battery"),            'O', c_yellow,  '#', c_red,    80, 300, 1000, AT_BATT, itm_storage_battery, 2,
        mfb(vpf_internal) | mfb(vpf_fuel_tank) },
    { N_("minireactor"),                'O', c_ltgreen,  '#', c_red,    80, 700, 10000, AT_PLUT, itm_minireactor, 7,
        mfb(vpf_internal) | mfb(vpf_fuel_tank) },
    { N_("hydrogene tank"),             'O', c_ltblue,  '#', c_red,     80, 150, 3000, AT_PLASMA, itm_metal_tank, 1,
        mfb(vpf_internal) | mfb(vpf_fuel_tank) },
    { N_("trunk"),                      'H', c_brown,  '#', c_brown,    80, 300, 400, 0, itm_frame, 1,
        mfb(vpf_over) | mfb(vpf_cargo) },
    { N_("box"),                        'o', c_brown,  '#', c_brown,    60, 100, 400, 0, itm_frame, 1,
        mfb(vpf_over) | mfb(vpf_cargo) },

    { N_("controls"),   '$', c_ltgray,  '$', c_red,     10, 250, 0, 0, itm_vehicle_controls, 3,
        mfb(vpf_internal)  | mfb(vpf_controls) },
//                                                          bonus
    { N_("muffler"),    '/', c_ltgray,  '/', c_ltgray,  10, 150, 40, 0, itm_muffler, 2,
        mfb(vpf_internal)  | mfb(vpf_muffler) },
    { N_("seatbelt"),   ',', c_ltgray,  ',', c_red,     10, 200, 25, 0, itm_rope_6, 1,
        mfb(vpf_internal)  | mfb(vpf_seatbelt) },
    { N_("solar panel"), '#', c_yellow,  'x', c_yellow, 10, 20, 30, 0, itm_solar_panel, 6,
        mfb(vpf_over)  | mfb(vpf_solar_panel) },

    { N_("mounted M249"),         't', c_cyan,    '#', c_cyan,    80, 400, 0, AT_223, itm_m249, 6,
        mfb(vpf_over)  | mfb(vpf_turret) | mfb(vpf_cargo) },
    { N_("mounted flamethrower"), 't', c_dkgray,  '#', c_dkgray,  80, 400, 0, AT_GAS, itm_flamethrower, 7,
        mfb(vpf_over)  | mfb(vpf_turret) },
    { N_("mounted plasma gun"), 't', c_ltblue,    '#', c_ltblue,    80, 400, 0, AT_PLASMA, itm_plasma_rifle, 7,
        mfb(vpf_over)  | mfb(vpf_turret) },

    { N_("steel plating"),     ')', c_ltcyan, ')', c_ltcyan, 100, 1000, 0, 0, itm_steel_plate, 3,
        mfb(vpf_internal) | mfb(vpf_armor) },
    { N_("superalloy plating"),')', c_dkgray, ')', c_dkgray, 100, 900, 0, 0, itm_alloy_plate, 4,
        mfb(vpf_internal) | mfb(vpf_armor) },
    { N_("spiked plating"),    ')', c_red,    ')', c_red,    150, 900, 0, 0, itm_spiked_plate, 3,
        mfb(vpf_internal) | mfb(vpf_armor) | mfb(vpf_sharp) },
    { N_("hard plating"),      ')', c_cyan,   ')', c_cyan,   100, 2300, 0, 0, itm_hard_plate, 4,
        mfb(vpf_internal) | mfb(vpf_armor) },
    { N_("head light"),        '*', c_white,  '*', c_white,  10, 20, 120, 0, itm_flashlight, 1,
       mfb(vpf_internal) | mfb(vpf_light) }
};
